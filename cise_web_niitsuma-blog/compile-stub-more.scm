;compile stub-simple-example.scm
;generate stub-simple-example.c and  stub-simple-example.h
(use gauche.parseopt)
(use gauche.parameter)
(use gauche.cgen)
(use gauche.cgen.stub)
(use file.util)
(use util.match)

(parameterize ([cgen-current-unit
                    (make <cgen-stub-unit>
                      :name "stub-simple-example"
		      :c-file  "stub-simple-example.c"
		      :h-file    "stub-simple-example.h"
                      :preamble '("/* Generated by my-genstub.  Do not edit. */")
                      :pre-decl '("#define AAAA 3.14")
                      :init-prologue "void test111(int aaaaa);\n"
		      )
		    ]
	       )
	      (with-input-from-file "stub-simple-example.scm"
		(cut port-fold
		     (lambda (form decl-strings?)
		       (cond [(and decl-strings? (string? form)) (cgen-decl form) #t]
			     [else (cgen-stub-parse-form form) #f]))
		     #t read))
     
	      (cgen-emit-c (cgen-current-unit))
	      (cgen-emit-h (cgen-current-unit))
) 

